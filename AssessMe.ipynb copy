{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Добро пожаловать в ---. Данная программа рассчитывает накопленную оценку по выбранному периоду времени для студентов первого курса МИЭФ. Если вы продолжаете использовать программу, вы учитываете что полученные данные сформированны в информативных целях и не несут смысла. Для продолжения работы программы установите Selenium & Chromedriver, запускайте ячейки ниже и следуйте инструкциям."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "def Frodo(dec):\n",
    "    \"\"\"\n",
    "    A function combines marks for computer science and history/philosophy optional courses\n",
    "    courses to ease further calculations.\n",
    "    Parameters: dec - a dataframe with students' marks\n",
    "    Returns a dataframe with appended marks.\n",
    "    \"\"\"\n",
    "    for name in dec:\n",
    "        try:\n",
    "                dec[name][\"Information computer systems\"] = int(dec[name][\"Information computer systems\"])\n",
    "        except:\n",
    "            dec[name][\"Information computer systems\"] = 0\n",
    "        try:\n",
    "                dec[name][\"Programming and Data Processing\"] = int(dec[name][\"Programming and Data Processing\"])\n",
    "        except:\n",
    "            dec[name][\"Programming and Data Processing\"] = 0\n",
    "        try:\n",
    "                dec[name][\"Programming and Data bases\"] = int(dec[name][\"Programming and Data bases\"])\n",
    "        except:\n",
    "            dec[name][\"Programming and Data bases\"] = 0\n",
    "        try:\n",
    "                dec[name][\"History of Western Philosophy\"] = int(dec[name][\"History of Western Philosophy\"])\n",
    "        except:\n",
    "            dec[name][\"History of Western Philosophy\"] = 0\n",
    "        try:\n",
    "                dec[name][\"World Intellectual history\"] = int(dec[name][\"World Intellectual history\"])\n",
    "        except:\n",
    "            dec[name][\"World Intellectual history\"] = 0\n",
    "        \n",
    "        dec[name][\"Computer science\"] = dec[name][\"Information computer systems\"] + dec[name][\n",
    "            \"Programming and Data Processing\"] + dec[name][\"Programming and Data bases\"]\n",
    "        dec[name][\"History/philosophy\"] = dec[name][\"History of Western Philosophy\"] + dec[name][\n",
    "            \"World Intellectual history\"]\n",
    "    return (dec)\n",
    "\n",
    "\n",
    "\n",
    "def calc(ca_1, ca_2):\n",
    "    '''\n",
    "    Calculates the spring 'nakop' for Calculus.\n",
    "    Parameters: ca_1 (mark for the 1st period), ca_2 (mark for the 2nd period).\n",
    "    Returns the value of Calculus 'nakop' on 100-points scale.\n",
    "    '''\n",
    "    try:\n",
    "        res = ((float(ca_1) * 0.4) + (float(ca_2) * 0.19)) / 0.59\n",
    "    except:\n",
    "        res = 0\n",
    "    return res\n",
    "\n",
    "def stat(st_1, st_2):\n",
    "    '''\n",
    "    Calculates the spring 'nakop' for Statistics.\n",
    "    Parameters: ca_1 (mark for the 1st period), ca_2 (mark for the 2nd period).\n",
    "    Returns the value of Statistics 'nakop' on 100-points scale.\n",
    "    '''\n",
    "    try:\n",
    "        res = ((float(st_1) * 0.2) + (float(st_2) * 0.2)) / 0.4\n",
    "    except:\n",
    "        res = 0\n",
    "    return res\n",
    "\n",
    "def engl(en_1, en_2):\n",
    "    '''\n",
    "    Calculates the spring 'nakop' for English.\n",
    "    Parameters: ca_1 (mark for the 1st period), ca_2 (mark for the 2nd period).\n",
    "    Returns the value of English 'nakop' on 100-points scale.\n",
    "    '''\n",
    "    try:\n",
    "        res = ((float(en_1) * 0.25) + (float(en_2) * (100 / 9) * 0.2)) / 0.45\n",
    "    except:\n",
    "        res = 0\n",
    "    \n",
    "def Aragorn_f(mi, ca, st, co, en):\n",
    "    \"\"\"\n",
    "    Calculates the 'nakop' for fall period.\n",
    "    Parameters: mi (microeconomics mark), \n",
    "    ca (calculus mark), st (statistics mark), \n",
    "    co (mark for one of three comuter science course on ICEF),\n",
    "    en (English language mark).\n",
    "    Return the value of 'nakop' on 100-points scale.\n",
    "    \"\"\"\n",
    "    try:\n",
    "        mi = float(mi)\n",
    "    except:\n",
    "        mi = 0\n",
    "    try:\n",
    "        ca = float(ca)\n",
    "    except:\n",
    "        ca = 0\n",
    "    try:\n",
    "        st = float(st)\n",
    "    except:\n",
    "        st = 0\n",
    "    try:\n",
    "        co = float(co)\n",
    "    except:\n",
    "        co = 0\n",
    "    try:\n",
    "        en = float(en)\n",
    "    except:\n",
    "        en = 0\n",
    "    return ((mi + ca + st + (0.5 * co) + en) / 4.5)\n",
    "               \n",
    "def Aragorn_s(mi, ma, ca, st, co, en, hp):\n",
    "    \"\"\"\n",
    "    Calculates the 'nakop' for spring period.\n",
    "    Parameters: mi (microeconomics mark), ma (macroeconomics mark), \n",
    "    ca (calculus mark), st (statistics mark), \n",
    "    co (mark for one of three comuter science course on ICEF),\n",
    "    en (English language mark), hp (mark for history/philosophy).\n",
    "    Return the value of 'nakop' on 100-points scale.\n",
    "    \"\"\"\n",
    "    try:\n",
    "        mi = float(mi)\n",
    "    except:\n",
    "        mi = 0\n",
    "    try:\n",
    "        ma = float(ma)\n",
    "    except:\n",
    "        ma = 0\n",
    "    try:\n",
    "        ca = float(ca)\n",
    "    except:\n",
    "        ca = 0\n",
    "    try:\n",
    "        st = float(st)\n",
    "    except:\n",
    "        st = 0\n",
    "    try:\n",
    "        co = float(co)\n",
    "    except:\n",
    "        co = 0\n",
    "    try:\n",
    "        en = float(en)\n",
    "    except:\n",
    "        en = 0\n",
    "    try:\n",
    "        hp = float(hp)\n",
    "    except:\n",
    "        hp = 0\n",
    "        \n",
    "    return ((mi + ma + ca + st + (0.5 * co) + en + hp) / 6.5)\n",
    "\n",
    "def Gendalf(dec, mar):\n",
    "    \"\"\"\n",
    "    A function that calculates the total 'nakop' for the spring period.\n",
    "    Patameters: dec (dataset of the December ranking), mar (dataset of spring exam results).\n",
    "    Returns a dataset with a name of a student and his cumularive mark for spring period.\n",
    "    \"\"\"\n",
    "    nakop = dict()\n",
    "    \n",
    "    for name in dec:\n",
    "        try:\n",
    "            if dec[name]['student ID']=='OUT OF RATING':\n",
    "                pass\n",
    "            else:\n",
    "                nakop[name] = Aragorn_s(dec[name][\"Microeconomics\"], mar[name][\"Macroeconomics\"],\n",
    "                                    calc(dec[name][\"Calculus\"], mar[name][\"Calculus\"]),\n",
    "                                    stat(dec[name][\"Statistics\"], mar[name][\"Statistics\"]),\n",
    "                                    dec[name][\"Computer science\"],\n",
    "                                    engl(dec[name][\"English\"], mar[name][\"English\"]),dec[name][\"History/philosophy\"])\n",
    "           \n",
    "            \n",
    "        except:\n",
    "            pass\n",
    "    return (nakop)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## При запуске следующей ячейки введите имя пользователя как на вашем Мас устройстве."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Type in your username as on your Mac device: pavel\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "username = str(input(\"Type in your username as on your Mac device: \"))\n",
    "pathway_downloads = \"/Users/\" + username + \"/Downloads\"\n",
    "pathway_chromedriver = pathway_downloads + \"/Chromedriver\"\n",
    "os.chdir(pathway_downloads)\n",
    "os.getcwd()\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "import selenium\n",
    "\n",
    "from selenium import webdriver as wb\n",
    "\n",
    "br = wb.Chrome(pathway_chromedriver)\n",
    "\n",
    "br.get(\"https://icef-info.hse.ru/\")\n",
    "\n",
    "id_ =  br.find_element_by_xpath(\"//input[@id='username']\")\n",
    "password = br.find_element_by_xpath(\"//input[@id='password']\")\n",
    "\n",
    "\n",
    "id_.clear()\n",
    "password.clear()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Далее введите свой логин и пароль для входа в информационную систему МИЭФ."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter your ICEF login: pssmirnov_4\n",
      "Enter your ICEF password: eorjrca\n"
     ]
    }
   ],
   "source": [
    "id_.clear()\n",
    "password.clear()\n",
    "input_login=str(input('Enter your ICEF login: '))\n",
    "input_password=str(input('Enter your ICEF password: '))\n",
    "id_.send_keys(input_login)\n",
    "password.send_keys(input_password)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "button = br.find_element_by_xpath(\"//input[@value='Login']\")\n",
    "button.click()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Далее вы можете перейти по ссылке и скачать результаты за сессии 2020-2021 учебного года. Файли скачиваются автоматически (!!!), но в случае любых ошибок перейдите по ссылкам и вручную скачайте файлы на Ваше устройство. \n",
    "\n",
    "Названия файлов:\n",
    "* Year 1_October midterm session_2020-2021\n",
    "* Rating_year 1 students_semester 1_2020-2021\n",
    "* Year 1_March_midterm_session_2020-2021"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "https://icef-info.hse.ru/goto_icef_cat_47097.html 1. October midterm results (THIS IS NOT RATING)\n",
      "https://icef-info.hse.ru/goto_icef_cat_47098.html 2. December Rating (Semester 1 results)\n",
      "https://icef-info.hse.ru/goto_icef_cat_47099.html 3. March midterm results (THIS IS NOT RATING)\n",
      "https://icef-info.hse.ru/goto_icef_cat_47100.html 4. Final rating for the year\n"
     ]
    }
   ],
   "source": [
    "# человек попадает в Repository\n",
    "home = \"https://icef-info.hse.ru/goto_icef_root_1.html\"\n",
    "br.get(home)\n",
    "# чел попадает в папку BSc Rating (все рейтинги)\n",
    "br.get(\"https://icef-info.hse.ru/goto_icef_cat_22690.html\")\n",
    "br.get(\"https://icef-info.hse.ru/goto_icef_cat_47096.html\")\n",
    "\n",
    "from bs4 import BeautifulSoup\n",
    "soup = BeautifulSoup(br.page_source)\n",
    "for i in soup.find_all(\"h4\"):\n",
    "    print(i.find_all(\"a\")[0].get(\"href\"), i.text)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Выберите период, за который вы хотите получить рейтинг и оценки."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "0a57c9fe5d084b3892f512874da6b678",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Dropdown(description='Choose:', options=(('Fall', 1), ('Spring', 2)), value=1)"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import ipywidgets as widgets\n",
    "period = widgets.Dropdown(\n",
    "    options=[('Fall', 1), ('Spring', 2)],\n",
    "    value=1,\n",
    "    description='Choose:',\n",
    ")\n",
    "\n",
    "display(period)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [],
   "source": [
    "if period.value == 1:\n",
    "    br.get(\"https://icef-info.hse.ru/goto_icef_cat_47097.html\")\n",
    "    br.get(\"https://icef-info.hse.ru/goto_icef_file_47101_download.html\")\n",
    "    file_names = [\"Year 1_October midterm session_2020-2021\"]\n",
    "\n",
    "if period.value == 2:\n",
    "    \n",
    "    file_names = [\"Year 1_March_midterm_session_2020-2021\", \"Rating_year 1 students_semester 1_2020-2021\"]\n",
    "    \n",
    "    br.get('https://icef-info.hse.ru/goto_icef_cat_47098.html')\n",
    "    br.get('https://icef-info.hse.ru/goto_icef_file_50311_download.html')\n",
    "    br.get(\"https://icef-info.hse.ru/goto_icef_cat_47096.html\")\n",
    "    br.get(\"https://icef-info.hse.ru/goto_icef_cat_47099.html\")\n",
    "    br.get('https://icef-info.hse.ru/goto_icef_file_52284_download.html')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Пожалуйста, вручную сконвертируйте скачанные файлы в формат CSV UTF-8 (разделитель-запятая) (.csv) и сохраните их в загрузки."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [],
   "source": [
    "import csv\n",
    "def writing_in_the_file(full_data):\n",
    "    for name in full_data:\n",
    "        new_file.write(name+'.')\n",
    "        for key in full_data[name]:\n",
    "            new_file.write(key+','+full_data[name][key]+';')\n",
    "        new_file.write('\\n')\n",
    "def filling_the_data(raw_row,full_data,period):\n",
    "    student_info=dict()\n",
    "    if period=='winter':\n",
    "        student_info['student ID']=raw_row[1]\n",
    "        student_info['Academic group']=raw_row[3]\n",
    "        student_info['English group']=raw_row[4]\n",
    "        student_info['Microeconomics']=raw_row[5]\n",
    "        student_info['Calculus']=raw_row[8]\n",
    "        student_info['Statistics']=raw_row[11]\n",
    "        student_info['Information computer systems']=raw_row[14]\n",
    "        student_info['Programming and Data Processing']=raw_row[17]\n",
    "        student_info['Programming and Data bases']=raw_row[20]\n",
    "        student_info['English']=raw_row[23]\n",
    "        student_info['History of Western Philosophy']=raw_row[24]\n",
    "        student_info['World Intellectual history']=raw_row[25]\n",
    "    elif period=='fall':\n",
    "        student_info['student ID']=raw_row[1]\n",
    "        student_info['Academic group']=raw_row[4]\n",
    "        student_info['English group']=raw_row[5]\n",
    "        student_info['Microeconomics']=raw_row[6]\n",
    "        student_info['Calculus']=raw_row[7]\n",
    "        student_info['Statistics']=raw_row[8]\n",
    "        student_info['Information computer systems']=raw_row[9]\n",
    "        student_info['Programming and Data Processing']=raw_row[10]\n",
    "        student_info['Programming and Data bases']=raw_row[11]\n",
    "        student_info['English']=raw_row[12]\n",
    "    elif period=='spring':\n",
    "        student_info['student ID']=raw_row[1]\n",
    "        student_info['Academic group'] = raw_row[4]\n",
    "        student_info['English group'] = raw_row[5]\n",
    "        student_info['Statistics'] = raw_row[6]\n",
    "        student_info['Macroeconomics'] = raw_row[7]\n",
    "        student_info['Calculus'] = raw_row[8]\n",
    "        student_info['English'] = raw_row[9]\n",
    "    full_data[raw_row[2]]=student_info\n",
    "    return full_data\n",
    "def reading_the_data(full_data,period):\n",
    "    titles = list()\n",
    "    if period=='winter':\n",
    "        with open(\"Rating_year 1 students_semester 1_2020-2021.csv\") as csv_file:\n",
    "            row_count = 1\n",
    "            reader = csv.reader(csv_file, delimiter=';', quotechar=',', quoting=csv.QUOTE_MINIMAL)\n",
    "            for row in reader:\n",
    "                if row_count < 4:\n",
    "                    row_count += 1\n",
    "                    pass\n",
    "                elif row_count >= 4:\n",
    "                    raw_row=row\n",
    "                    full_data.update(filling_the_data(raw_row,full_data,period))\n",
    "                    row_count+=1\n",
    "                    pass\n",
    "    elif period=='fall':\n",
    "        with open(\"Year 1_October midterm session_2020-2021.csv\") as csv_file:\n",
    "            row_count = 1\n",
    "            reader = csv.reader(csv_file, delimiter=';', quotechar=',', quoting=csv.QUOTE_MINIMAL)\n",
    "            for row in reader:\n",
    "                if row_count < 4:\n",
    "                    row_count += 1\n",
    "                    pass\n",
    "                elif row_count >= 4:\n",
    "                    raw_row = row\n",
    "                    full_data.update(filling_the_data(raw_row, full_data,period))\n",
    "                    row_count += 1\n",
    "                    pass\n",
    "    elif period=='spring':\n",
    "        with open(\"Year 1_March_midterm_session_2020-2021.csv\") as csv_file:\n",
    "            row_count = 1\n",
    "            reader = csv.reader(csv_file, delimiter=';', quotechar=',', quoting=csv.QUOTE_MINIMAL)\n",
    "            for row in reader:\n",
    "                if row_count < 5:\n",
    "                    row_count += 1\n",
    "                    pass\n",
    "                elif row_count >= 5:\n",
    "                    raw_row = row\n",
    "                    full_data.update(filling_the_data(raw_row, full_data,period))\n",
    "                    row_count += 1\n",
    "                    pass\n",
    "    return full_data\n",
    "full_data=dict()\n",
    "\n",
    "if period.value == 1: #fall\n",
    "    season = [\"fall\"]\n",
    "    for seas in season:\n",
    "        full_data = reading_the_data(full_data, seas)\n",
    "elif period.value == 2: #spring\n",
    "    iterate = 1\n",
    "    seasons = [\"winter\", \"spring\"]\n",
    "    for seas in seasons:\n",
    "        full_data = dict()\n",
    "        full_data = reading_the_data(full_data, seas)\n",
    "        if iterate == 1:\n",
    "            full_data_1 = full_data\n",
    "        elif iterate == 2:\n",
    "            full_data_2 = full_data\n",
    "        iterate += 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [],
   "source": [
    "if period.value == 1:\n",
    "    fall = full_data\n",
    "    fall = Frodo(fall)\n",
    "elif period.value == 2:\n",
    "    dec = full_data_1\n",
    "    mar = full_data_2\n",
    "    dec = Frodo(dec)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [],
   "source": [
    "if period.value == 1:\n",
    "    nakop = dict()\n",
    "    for name in fall:\n",
    "        grade = Aragorn_f(fall[name][\"Microeconomics\"], fall[name][\"Calculus\"], fall[name][\"Statistics\"], fall[name][\"Computer science\"], fall[name][\"English\"])\n",
    "        nakop[name] = grade\n",
    "elif period.value == 2:\n",
    "    nakop = Gendalf(dec, mar)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "metadata": {},
   "outputs": [],
   "source": [
    "def sorting(full_data,choice,rev,nakop):\n",
    "    top=list()\n",
    "    printed_names=dict()\n",
    "    if choice=='Nakop':\n",
    "        for name in nakop:\n",
    "            top.append(int(nakop[name]))\n",
    "            printed_names[name]=0\n",
    "        if rev == 'True':\n",
    "            top = sorted(top, reverse=True)\n",
    "        elif rev == 'False':\n",
    "            top = sorted(top, reverse=False)\n",
    "        iteration = 1\n",
    "        number = 0\n",
    "        while number < len(top):\n",
    "            for name in nakop:\n",
    "                try:\n",
    "                    if int(nakop[name]) == top[number] and printed_names[name] != 1:\n",
    "                        print('№', iteration, ') ', name, ' (', int(nakop[name]), ')')\n",
    "                        printed_names[name] = 1\n",
    "                        iteration += 1\n",
    "                        number += 1\n",
    "                except:\n",
    "                    pass\n",
    "    else:\n",
    "        for name in full_data:\n",
    "            try:\n",
    "                top.append(int(full_data[name][choice]))\n",
    "                printed_names[name]=0\n",
    "            except:\n",
    "                pass\n",
    "        if rev=='True':\n",
    "            top=sorted(top,reverse=True)\n",
    "        elif rev=='False':\n",
    "            top = sorted(top, reverse=False)\n",
    "        iteration = 1\n",
    "        number=0\n",
    "        while number<len(top):\n",
    "            for name in full_data:\n",
    "                try:\n",
    "                    if int(full_data[name][choice])==top[number] and printed_names[name]!=1:\n",
    "                        print('№',iteration,') ',name,' (',int(full_data[name][choice]),')' )\n",
    "                        printed_names[name]=1\n",
    "                        iteration+=1\n",
    "                        number+=1\n",
    "                except:\n",
    "                    pass"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Далее вы можете получить список людей, отсортированных по выбранному периоду, предмету, убыванию/возрастанию, накопу. Выбирайте ниже желаемые параметры и последовательно запускайте ячейки."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "ec7e9443d0e54518bb12fb15827f8ed0",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Dropdown(description='Season:', options=(('Fall', 1), ('Winter', 2), ('Spring', 3)), value=1)"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "season = widgets.Dropdown(\n",
    "    options=[('Fall', 1), ('Winter', 2), ('Spring', 3)],\n",
    "    value=1,\n",
    "    description='Season:',\n",
    ")\n",
    "\n",
    "display(season)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "e5fad9a04c8e4a2b9532a6e0cc026360",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Dropdown(description='Subject:', options=(('Calculus', 1), ('Statistics', 2), ('Macroeconomics', 3), ('English…"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "if (season.value == 1) | (season.value == 2):\n",
    "    subject_fall_winter = widgets.Dropdown(\n",
    "        options = [(\"Calculus\", 1), ('Statistics', 2), (\"Microeconomics\", 3),\n",
    "               ('Computer science', 4), ('English', 5)],\n",
    "        value=1,\n",
    "        description='Subject')\n",
    "    display(subject_fall_winter)\n",
    "\n",
    "if season.value == 3:\n",
    "    subject_spring = widgets.Dropdown(\n",
    "    options = [(\"Calculus\", 1), ('Statistics', 2), (\"Macroeconomics\", 3),\n",
    "               ('English', 4)],\n",
    "    value = 1,\n",
    "    description='Subject:'\n",
    "    )\n",
    "    display(subject_spring)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "f275addf06934255952fc0da2b7a3a9a",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Dropdown(description='Order: ', options=(('Ascending', 1), ('Descending', 2)), value=1)"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "order = widgets.Dropdown(\n",
    "    options=[(\"Ascending\", 1), (\"Descending\", 2)],\n",
    "    value = 1,\n",
    "    description = \"Order: \"\n",
    ")\n",
    "display(order)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "metadata": {},
   "outputs": [],
   "source": [
    "if season.value == 1:\n",
    "    data_to_sort = fall\n",
    "    if subject_fall_winter.value == 1:\n",
    "        subject = \"Calculus\"\n",
    "    if subject_fall_winter.value == 2:\n",
    "        subject = \"Statistics\"\n",
    "    if subject_fall_winter.value == 3:\n",
    "        subject = \"Microeconomics\"\n",
    "    if subject_fall_winter.value == 4:\n",
    "        subject = \"Computer science\"\n",
    "    if subject_fall_winter.value == 5:\n",
    "        subject = \"English\"\n",
    "        \n",
    "if season.value == 2:\n",
    "    data_to_sort = dec\n",
    "    if subject_fall_winter.value == 1:\n",
    "        subject = \"Calculus\"\n",
    "    if subject_fall_winter.value == 2:\n",
    "        subject = \"Statistics\"\n",
    "    if subject_fall_winter.value == 3:\n",
    "        subject = \"Microeconomics\"\n",
    "    if subject_fall_winter.value == 4:\n",
    "        subject = \"Computer science\"\n",
    "    if subject_fall_winter.value == 5:\n",
    "        subject = \"English\"\n",
    "        \n",
    "if season.value == 3:\n",
    "    data_to_sort = mar\n",
    "    if subject_spring.value == 1:\n",
    "        subject = \"Calculus\"\n",
    "    if subject_spring.value == 2:\n",
    "        subject = \"Statistics\"\n",
    "    if subject_spring.value == 3:\n",
    "        subject = \"Macroeconomics\"\n",
    "    if subject_spring.value == 4:\n",
    "        subject = \"English\"\n",
    "\n",
    "if order.value == 1:\n",
    "    order_to_sort = \"False\"\n",
    "elif order.value == 2:\n",
    "    order_to_sort == \"True\""
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Запустив ячейку ниже, вы получите желаемый рейтинг."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "№ 1 )  Казыханов Ален  ( 3 )\n",
      "№ 2 )  Ван Юйцзе  ( 4 )\n",
      "№ 3 )  Зайнобиддинов Хожиакбар Мухаммаджон  ( 4 )\n",
      "№ 4 )  Мишуков Егор Дмитриевич  ( 5 )\n",
      "№ 5 )  Снастина Софья Алексеевна  ( 5 )\n",
      "№ 6 )  Баричева Полина Олеговна  ( 5 )\n",
      "№ 7 )  Москалёв Владимир Денисович  ( 6 )\n",
      "№ 8 )  Тищенко Александр Сергеевич  ( 6 )\n",
      "№ 9 )  Чуйков Артем Игоревич  ( 7 )\n",
      "№ 10 )  Абахов Александр Олегович  ( 7 )\n",
      "№ 11 )  Алиев Арслан Магомедович  ( 7 )\n",
      "№ 12 )  Джумаян Анна Арамовна  ( 7 )\n",
      "№ 13 )  Дубинина Ксения Михайловна  ( 7 )\n",
      "№ 14 )  Кабылбеков Алихан  ( 7 )\n",
      "№ 15 )  Кошелев Емельян Александрович  ( 7 )\n",
      "№ 16 )  Линь Данни  ( 7 )\n",
      "№ 17 )  Тесленко Пётр Олегович  ( 7 )\n",
      "№ 18 )  Ушакова Дарья Андреевна  ( 8 )\n",
      "№ 19 )  Агакишиева Нигар Исмаиловна  ( 8 )\n",
      "№ 20 )  Алексеенко Полина Игоревна  ( 9 )\n",
      "№ 21 )  Думнова Валерия Алексеевна  ( 9 )\n",
      "№ 22 )  Лебедева Элина Эмильевна  ( 9 )\n",
      "№ 23 )  Насонов Руслан Денисович  ( 9 )\n",
      "№ 24 )  Сучков Артём Алексеевич  ( 9 )\n",
      "№ 25 )  Ширшов Захар Владиславович  ( 9 )\n",
      "№ 26 )  Юминова Анна  ( 10 )\n",
      "№ 27 )  Азимова Асаль Сухробовна  ( 10 )\n",
      "№ 28 )  Албегов Азамат Русланович  ( 10 )\n",
      "№ 29 )  Ахтариева Алёна Данировна  ( 10 )\n",
      "№ 30 )  Дулгеру Алексей Артурович  ( 10 )\n",
      "№ 31 )  Козлова Анна Сергеевна  ( 10 )\n",
      "№ 32 )  Лу Цзянь  ( 11 )\n",
      "№ 33 )  Монгуш Валерия Аясовна  ( 11 )\n",
      "№ 34 )   Новоженов Дмитрий Денисович   ( 11 )\n",
      "№ 35 )  Трухан Никита Александрович  ( 11 )\n",
      "№ 36 )  Гришин Александр Сергеевич  ( 11 )\n",
      "№ 37 )  Крапивной Виталий Александрович  ( 12 )\n",
      "№ 38 )  Мамедкеримов Руслан Тимурович  ( 12 )\n",
      "№ 39 )  Нерсесян Аристарх Робертович  ( 12 )\n",
      "№ 40 )  Уразбахтин Радмир Расихович  ( 12 )\n",
      "№ 41 )  Филимонова Екатерина Олеговна  ( 12 )\n",
      "№ 42 )  Ходырев Александр Евгеньевич  ( 12 )\n",
      "№ 43 )  Цзян Хаоюнь  ( 12 )\n",
      "№ 44 )  Шаврова Виктория Алексеевна  ( 12 )\n",
      "№ 45 )  Баян Айрана Аясовна  ( 12 )\n",
      "№ 46 )  Ван Цзинхуэй  ( 13 )\n",
      "№ 47 )  Верба Владимир Максимович  ( 13 )\n",
      "№ 48 )  Иванов Всеволод Никитич  ( 13 )\n",
      "№ 49 )  Оржебовская Евгения Константиновна  ( 13 )\n",
      "№ 50 )  Панин Максим Александрович  ( 13 )\n",
      "№ 51 )  Поспелова Полина Андреевна  ( 13 )\n",
      "№ 52 )  Смирнов Георгий Александрович  ( 13 )\n",
      "№ 53 )  Фролов Артём Дмитриевич  ( 13 )\n",
      "№ 54 )  Андреев Дмитрий Валерьевич  ( 13 )\n",
      "№ 55 )  Мазурин Даниил Денисович  ( 14 )\n",
      "№ 56 )  Медведева Арина Евгеньевна  ( 14 )\n",
      "№ 57 )  Насуханова Ясмина Шаамановна  ( 14 )\n",
      "№ 58 )  Роберт Алексей Эрикович  ( 15 )\n",
      "№ 59 )  Стрельников Владимир Игоревич  ( 15 )\n",
      "№ 60 )  Феоктистов Николай Константинович  ( 15 )\n",
      "№ 61 )  Баходуров Руслан Махмурович  ( 15 )\n",
      "№ 62 )  Кухлевская Анастасия Эдуардовна  ( 15 )\n",
      "№ 63 )  Магамедова Анна Сергеевна  ( 16 )\n",
      "№ 64 )  Пятаков Илья Андреевич  ( 16 )\n",
      "№ 65 )  Фунг Куок Туан  ( 16 )\n",
      "№ 66 )  Хашимов Жасур Фарходович  ( 16 )\n",
      "№ 67 )  Цаллагова Виолетта Дмитриевна  ( 16 )\n",
      "№ 68 )  Шаров Илья Андреевич  ( 16 )\n",
      "№ 69 )  Гиниятуллин Эрнест Эдуардович  ( 17 )\n",
      "№ 70 )  Дижур Елизавета Геннадьевна  ( 17 )\n",
      "№ 71 )  Жиляева Елизавета  ( 17 )\n",
      "№ 72 )  Пинчук Екатерина Витальевна  ( 17 )\n",
      "№ 73 )  Ратушная Александра Романовна  ( 17 )\n",
      "№ 74 )  Демьянов Александр Сергеевич  ( 18 )\n",
      "№ 75 )  Динмухамед Даяна  ( 18 )\n",
      "№ 76 )  Колесников Максим Александрович  ( 18 )\n",
      "№ 77 )  Лосаберидзе Полина Мамуковна  ( 18 )\n",
      "№ 78 )  Прусаков Андрей Денисович  ( 18 )\n",
      "№ 79 )  Ядрищенский Александр Александрович  ( 19 )\n",
      "№ 80 )  Ескендир Ажар  ( 19 )\n",
      "№ 81 )  Мечетина Ева Александровна  ( 19 )\n",
      "№ 82 )   Пирогов Дмитрий Леонидович   ( 20 )\n",
      "№ 83 )  Тарасов Кирилл Олегович  ( 20 )\n",
      "№ 84 )  Хает Марк Игоревич  ( 20 )\n",
      "№ 85 )  Абдуганиев Бехзод Бахромжон угли  ( 20 )\n",
      "№ 86 )  Грицевич Камилла Евгеньевна  ( 20 )\n",
      "№ 87 )  Зезелёв Максим Андреевич  ( 20 )\n",
      "№ 88 )  Нордас Анастасия Максимовна  ( 21 )\n",
      "№ 89 )  Соболева Виктория  ( 21 )\n",
      "№ 90 )  Турнаев Александр -  ( 22 )\n",
      "№ 91 )  Черников Евгений Александрович  ( 22 )\n",
      "№ 92 )  Яцуненко Даниил Евгеньевич  ( 22 )\n",
      "№ 93 )  Бишир Младен  ( 22 )\n",
      "№ 94 )  Бородин Андрей Викторович  ( 22 )\n",
      "№ 95 )  Меркулова Виктория Анатольевна  ( 22 )\n",
      "№ 96 )   Павленко Полина Олеговна   ( 22 )\n",
      "№ 97 )  Савиных Егор Сергеевич  ( 22 )\n",
      "№ 98 )  Щекотова Анастасия Антоновна  ( 23 )\n",
      "№ 99 )  Дубровская Яна Олеговна  ( 23 )\n",
      "№ 100 )  Зольникова Августа Сергеевна  ( 23 )\n",
      "№ 101 )  Костюк Ярослав Русланович  ( 23 )\n",
      "№ 102 )  Красавин Олег Игоревич  ( 24 )\n",
      "№ 103 )   Лебедев Владислав Владимирович   ( 24 )\n",
      "№ 104 )  Одинцов Антон Викторович  ( 24 )\n",
      "№ 105 )  Рафаелян Георгий Робертович  ( 24 )\n",
      "№ 106 )  Романова Александра Андреевна  ( 24 )\n",
      "№ 107 )  Алехно Максим Игоревич  ( 24 )\n",
      "№ 108 )  Богомолова Дарья Евгеньевна  ( 25 )\n",
      "№ 109 )  Елтаев Икрамжон -  ( 25 )\n",
      "№ 110 )  Команова Алиса Викторовна  ( 25 )\n",
      "№ 111 )  Сало Назар Игоревич  ( 25 )\n",
      "№ 112 )  Синявская Дарья Степановна  ( 25 )\n",
      "№ 113 )   Точилкина Алёна Игоревна   ( 26 )\n",
      "№ 114 )  Хань Хаочэнь  ( 26 )\n",
      "№ 115 )  Арчибасова Алина Олеговна  ( 26 )\n",
      "№ 116 )   Жирихин Павел Антонович   ( 26 )\n",
      "№ 117 )  Максимов Дмитрий Александрович  ( 26 )\n",
      "№ 118 )  Мельничук Виолетта Владимировна  ( 26 )\n",
      "№ 119 )  Тангиев Идрис Ибрагимович  ( 27 )\n",
      "№ 120 )  Чернуха Алексей Алексеевич  ( 27 )\n",
      "№ 121 )  Шерман Лея Александровна  ( 27 )\n",
      "№ 122 )  Ким Дмитрий Алексеевич  ( 27 )\n",
      "№ 123 )  Крымов Владислав Константинович  ( 28 )\n",
      "№ 124 )  Мирзоева Айсел Фамиль кызы  ( 28 )\n",
      "№ 125 )  Мурылева Ксения Антоновна  ( 28 )\n",
      "№ 126 )  Павлоцкий Борис Ефимович  ( 28 )\n",
      "№ 127 )  Попельнюхова Екатерина Сергеевна  ( 28 )\n",
      "№ 128 )  Зимин Александр Ильич  ( 28 )\n",
      "№ 129 )  Кондрашова Елизавета Вячеславовна  ( 29 )\n",
      "№ 130 )  Лифар Михаил Андраникович  ( 29 )\n",
      "№ 131 )  Мельников Игорь Александрович  ( 29 )\n",
      "№ 132 )  Уланова Виктория Николаевна  ( 29 )\n",
      "№ 133 )  Аббасов Байрам Рахман оглы  ( 29 )\n",
      "№ 134 )  Вихарева Кристина Олеговна  ( 29 )\n",
      "№ 135 )  Манчук Дмитрий Сергеевич  ( 30 )\n",
      "№ 136 )  Сосорев Владимир Андреевич  ( 30 )\n",
      "№ 137 )  Болдова Мария Марковна  ( 30 )\n",
      "№ 138 )  Власюк Дмитрий Святославович  ( 31 )\n",
      "№ 139 )  Дулин Борис Константинович  ( 31 )\n",
      "№ 140 )  Жученко Алла Сергеевна  ( 31 )\n",
      "№ 141 )  Караченцов Пётр Андреевич  ( 31 )\n",
      "№ 142 )  Колчин Борис Олегович  ( 31 )\n",
      "№ 143 )  Косякова Мария Михайловна  ( 31 )\n",
      "№ 144 )  Уталиев Ахат Ринатович  ( 31 )\n",
      "№ 145 )  Финютина Екатерина Вячеславовна  ( 31 )\n",
      "№ 146 )  Флегонтов Антон Алексеевич  ( 31 )\n",
      "№ 147 )  Аванесов Артём Андреевич  ( 31 )\n",
      "№ 148 )  Золотарева Злата Сергеевна  ( 32 )\n",
      "№ 149 )  Курмукова Дарья Илдаровна  ( 32 )\n",
      "№ 150 )  Орлова Варвара Максимовна  ( 32 )\n",
      "№ 151 )  Шамои Заил Рашидович  ( 32 )\n",
      "№ 152 )  Мартиросян Нарине Григорьевна  ( 34 )\n",
      "№ 153 )  Султонбеков Хусанбек Гофурбек угли  ( 34 )\n",
      "№ 154 )  Шванова Инна Геннадьевна  ( 35 )\n",
      "№ 155 )  Эдельбиев Абдул-Малик Абдул-Керимович  ( 35 )\n",
      "№ 156 )  Ершова Мария Александровна  ( 35 )\n",
      "№ 157 )  Козлов Максим Андреевич  ( 35 )\n",
      "№ 158 )  Кононова Мария Алексеевна  ( 35 )\n",
      "№ 159 )  Моисеева Ксения Игоревна  ( 35 )\n",
      "№ 160 )  Стефанова Варвара Александровна  ( 35 )\n",
      "№ 161 )  Тишкова Софья Сергеевна  ( 36 )\n",
      "№ 162 )  Туровская Мария Сергеевна  ( 36 )\n",
      "№ 163 )  Ханжин Марк Денисович  ( 36 )\n",
      "№ 164 )  Шишкин Дамир Евгеньевич  ( 36 )\n",
      "№ 165 )  Шумилов Егор Дмитриевич  ( 36 )\n",
      "№ 166 )  Лиманский Лев Романович  ( 36 )\n",
      "№ 167 )  Шарифов Эльмир Беглярович  ( 37 )\n",
      "№ 168 )  Глебов Юрий Юрьевич  ( 37 )\n",
      "№ 169 )  Исаева Алина Юрьевна  ( 37 )\n",
      "№ 170 )  Коробов Иван Дмитриевич  ( 37 )\n",
      "№ 171 )  Кудрина Софья Александровна  ( 38 )\n",
      "№ 172 )  Кузнецов Аркадий Дмитриевич  ( 38 )\n",
      "№ 173 )  Секрет Татьяна Андреевна  ( 38 )\n",
      "№ 174 )  Шерматова Тансулуу Насипбековна  ( 38 )\n",
      "№ 175 )  Козачук Александр Владимирович  ( 38 )\n",
      "№ 176 )  Потехина Вера Андреевна  ( 39 )\n",
      "№ 177 )  Шхимян Мадлена Константиновна  ( 39 )\n",
      "№ 178 )  Беляевский Иван Денисович  ( 39 )\n",
      "№ 179 )   Гаврюшин Иван Викторович   ( 40 )\n",
      "№ 180 )  Любимов Даниил Александрович  ( 40 )\n",
      "№ 181 )  Маркарян Марк Жирайрович  ( 40 )\n",
      "№ 182 )  Одинцова Настасья Алексеевна  ( 40 )\n",
      "№ 183 )  Чан Конг Зуи Ан  ( 40 )\n",
      "№ 184 )  Бабаян Кристина Сергеевна  ( 41 )\n",
      "№ 185 )  Кривошеева Анна Сергеевна  ( 41 )\n",
      "№ 186 )  Поляков Артемий Владимирович  ( 41 )\n",
      "№ 187 )  Тасминская Анастасия Михайловна  ( 41 )\n",
      "№ 188 )  Уланова Алина Николаевна  ( 41 )\n",
      "№ 189 )  Гурбанов Осман Майыс оглу  ( 42 )\n",
      "№ 190 )  Жижин Максим Андреевич  ( 42 )\n",
      "№ 191 )  Коваленко Виктория Эдуардовна  ( 42 )\n",
      "№ 192 )  Малькова Софья Алексеевна  ( 43 )\n",
      "№ 193 )  Сиваков Семён Александрович  ( 43 )\n",
      "№ 194 )  Тишков Александр Александрович  ( 43 )\n",
      "№ 195 )  Чернеев Дмитрий Васильевич  ( 43 )\n",
      "№ 196 )  Егорова Елизавета Борисовна  ( 44 )\n",
      "№ 197 )  Зыбин Фёдор Антонович  ( 44 )\n",
      "№ 198 )  Мухин Константин Григорьевич  ( 44 )\n",
      "№ 199 )  Удовица Артём Олегович  ( 45 )\n",
      "№ 200 )  Хажимурат Нурбек  ( 45 )\n",
      "№ 201 )  Чернышев Глеб Владимирович  ( 45 )\n",
      "№ 202 )  Чеснакова Марина Алексеевна  ( 45 )\n",
      "№ 203 )  Чинарихин Матвей Сергеевич  ( 45 )\n",
      "№ 204 )  Чуланова Полина Дмитриевна  ( 45 )\n",
      "№ 205 )  Гуманова Мария Михайловна  ( 45 )\n",
      "№ 206 )  Каланджан Глеб Андреевич  ( 45 )\n",
      "№ 207 )  Макарова Александра Борисовна  ( 45 )\n",
      "№ 208 )  Минаев Владислав Романович  ( 46 )\n",
      "№ 209 )  Поляков Александр Андреевич  ( 46 )\n",
      "№ 210 )  Рубан Иван Константинович  ( 46 )\n",
      "№ 211 )  Сахно Евфросиния Дмитриевна  ( 46 )\n",
      "№ 212 )  Антипова Анна Михайловна  ( 46 )\n",
      "№ 213 )  Ворошилин Иван Игоревич  ( 46 )\n",
      "№ 214 )  Ишутина Александра  ( 47 )\n",
      "№ 215 )  Кокорев Максим Александрович  ( 47 )\n",
      "№ 216 )  Синельник Софья Вадимовна  ( 47 )\n",
      "№ 217 )  Бовдурец Сергей Сергеевич  ( 48 )\n",
      "№ 218 )  Жук Марина Юрьевна  ( 48 )\n",
      "№ 219 )  Комарова Юлия Денисовна  ( 49 )\n",
      "№ 220 )  Кудряшова Анна Андреевна  ( 49 )\n",
      "№ 221 )  Сайфуллин Арсен Эдуардович  ( 49 )\n",
      "№ 222 )  Борисова Ульяна Васильевна  ( 49 )\n",
      "№ 223 )  Махмудова Анастасия Искандаровна  ( 50 )\n",
      "№ 224 )  Экономова Мария Александровна  ( 50 )\n",
      "№ 225 )  Явися Полина Андреевна  ( 50 )\n",
      "№ 226 )  Багдасарова Ангелина Рафиковна  ( 50 )\n",
      "№ 227 )  Егоров Богдан Евгеньевич  ( 51 )\n",
      "№ 228 )  Акопян Мариам Аперовна  ( 52 )\n",
      "№ 229 )  Алиханов Антон Александрович  ( 53 )\n",
      "№ 230 )  Мочалов Алексей Андреевич  ( 53 )\n",
      "№ 231 )  Павлов Владимир  ( 53 )\n",
      "№ 232 )  Чан Ань Киет  ( 54 )\n",
      "№ 233 )  Кокина Алиса Александровна  ( 54 )\n",
      "№ 234 )  Швидко Мария Александровна  ( 55 )\n",
      "№ 235 )  Головин Артём Андреевич  ( 55 )\n",
      "№ 236 )  Калиновский Алексей Александрович  ( 55 )\n",
      "№ 237 )  Костенкова Дарья Алексеевна  ( 56 )\n",
      "№ 238 )  Оганов Михаил Владимирович  ( 56 )\n",
      "№ 239 )  Пасихов Никита Денисович  ( 56 )\n",
      "№ 240 )  Федорова Елизавета Александровна  ( 56 )\n",
      "№ 241 )  Бабаева Дженнет Бяшимовна  ( 57 )\n",
      "№ 242 )  Буднева Полина Михайловна  ( 57 )\n",
      "№ 243 )  Долганова Софья Михайловна  ( 57 )\n",
      "№ 244 )  Коломойцева Алина Леонидовна  ( 57 )\n",
      "№ 245 )  Кузьмишин Леонид Алексеевич  ( 59 )\n",
      "№ 246 )  Манукян Александр Андраникович  ( 59 )\n",
      "№ 247 )  Мэссэрова Диана Ренатовна  ( 59 )\n",
      "№ 248 )  Хакимов Санжар Зафарович  ( 59 )\n",
      "№ 249 )  Голоднова Анастасия Вадимовна  ( 60 )\n",
      "№ 250 )  Сагиев Вадим Вадимович  ( 60 )\n",
      "№ 251 )  Болдырев Никита Сергеевич  ( 61 )\n",
      "№ 252 )  Борисов Валентин Денисович  ( 61 )\n",
      "№ 253 )  Гвоздева Валерия Игоревна  ( 62 )\n",
      "№ 254 )  Конькова Арина Александровна  ( 62 )\n",
      "№ 255 )  Саладущенкова Екатерина Евгеньевна  ( 62 )\n",
      "№ 256 )  Солнцев Кирилл Викторович  ( 62 )\n",
      "№ 257 )  Асадова Айгюн Джабировна  ( 62 )\n",
      "№ 258 )  Волохова Екатерина Сергеевна  ( 63 )\n",
      "№ 259 )  Колтун Александра Максимовна  ( 64 )\n",
      "№ 260 )  Махалова Софья Александровна  ( 64 )\n",
      "№ 261 )  Абрамов Илья Викторович  ( 64 )\n",
      "№ 262 )  Борисов Станислав Викторович  ( 64 )\n",
      "№ 263 )  Вахитова Алиса Радиковна  ( 64 )\n",
      "№ 264 )  Смирнов Павел Сергеевич  ( 65 )\n",
      "№ 265 )  Стукан Дмитрий Александрович  ( 65 )\n",
      "№ 266 )  Булгакова Кристина Игоревна  ( 65 )\n",
      "№ 267 )  Курбатов Игорь Владимирович  ( 66 )\n",
      "№ 268 )  Матвиевский Максим Павлович  ( 66 )\n",
      "№ 269 )  Азаренко Артем Александрович  ( 67 )\n",
      "№ 270 )  Багдасарова Мария Артемовна  ( 67 )\n",
      "№ 271 )  Горовая Мария Андреевна  ( 67 )\n",
      "№ 272 )  Комарова Александра Денисовна  ( 67 )\n",
      "№ 273 )  Кучев Виктор Николаевич  ( 67 )\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "№ 274 )  Перваков Владислав Вадимович  ( 68 )\n",
      "№ 275 )  Толеужан Адилет  ( 69 )\n",
      "№ 276 )  Штуца Елизавета Ильинична  ( 69 )\n",
      "№ 277 )  Воронов Валерий Алексеевич  ( 69 )\n",
      "№ 278 )  Кревсун Алина Константиновна  ( 69 )\n",
      "№ 279 )  Озолин Денис Александрович  ( 69 )\n",
      "№ 280 )  Стародубов Егор Алексеевич  ( 70 )\n",
      "№ 281 )  Гайнутдинова Амина Ринатовна  ( 70 )\n",
      "№ 282 )  Запрягаева Влада Юрьевна  ( 71 )\n",
      "№ 283 )  Карпилович Игнат Юрьевич  ( 71 )\n",
      "№ 284 )  Устименко Полина Антоновна  ( 71 )\n",
      "№ 285 )  Черниговский Матвей Романович  ( 72 )\n",
      "№ 286 )  Шабанов Юрий Александрович  ( 72 )\n",
      "№ 287 )  Богомазова Анна Сергеевна  ( 72 )\n",
      "№ 288 )  Бутакова Ксения Михайловна  ( 74 )\n",
      "№ 289 )  Сердюк Даниил Игоревич  ( 74 )\n",
      "№ 290 )  Володченко Полина Витальевна  ( 76 )\n",
      "№ 291 )  Суханова Анастасия Игоревна  ( 78 )\n",
      "№ 292 )  Агеева Елизавета Игоревна  ( 78 )\n",
      "№ 293 )  Видович Вера Янковна  ( 79 )\n",
      "№ 294 )  Жданова Елизавета Александровна  ( 79 )\n",
      "№ 295 )  Шишкина Анастасия Михайловна  ( 79 )\n",
      "№ 296 )  Репецкая Матрёна Сергеевна  ( 80 )\n",
      "№ 297 )  Венгеров Кирилл Игоревич  ( 81 )\n",
      "№ 298 )  Козелло Екатерина Игоревна  ( 82 )\n",
      "№ 299 )  Юрчук Мирослав Дмитриевич  ( 82 )\n",
      "№ 300 )  Панин Кирилл Артемович  ( 84 )\n",
      "№ 301 )  Завьялова Екатерина Алексеевна  ( 85 )\n",
      "№ 302 )  Мурзалина Жания  ( 86 )\n",
      "№ 303 )  Бахмутский Андрей Юрьевич  ( 86 )\n",
      "№ 304 )  Распутина Софья Александровна  ( 87 )\n",
      "№ 305 )  Атовмян Полина Игоревна  ( 88 )\n",
      "№ 306 )  Бушева Полина Олеговна  ( 89 )\n",
      "№ 307 )  Салямова София Эдуардовна  ( 89 )\n",
      "№ 308 )  Чистякова Екатерина Юрьевна  ( 90 )\n"
     ]
    }
   ],
   "source": [
    "sorting(data_to_sort, subject, order_to_sort, nakop)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Запустив ячейку ниже вы получите рейтинг за желаемый период."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "№ 1 )   Мельников Игорь Александрович   ( 70 )\n",
      "№ 2 )   Чистякова Екатерина Юрьевна   ( 66 )\n",
      "№ 3 )   Атовмян Полина Игоревна   ( 65 )\n",
      "№ 4 )   Бахмутский Андрей Юрьевич   ( 65 )\n",
      "№ 5 )   Сердюк Даниил Игоревич   ( 65 )\n",
      "№ 6 )   Мэссэрова Диана Ренатовна   ( 64 )\n",
      "№ 7 )   Воронов Валерий Алексеевич   ( 63 )\n",
      "№ 8 )   Жданова Елизавета Александровна   ( 62 )\n",
      "№ 9 )   Яо Юймо -   ( 60 )\n",
      "№ 10 )   Бушева Полина Олеговна   ( 59 )\n",
      "№ 11 )   Кузьмишин Леонид Алексеевич   ( 59 )\n",
      "№ 12 )   Мочалов Алексей Андреевич   ( 59 )\n",
      "№ 13 )   Салямова София Эдуардовна   ( 59 )\n",
      "№ 14 )   Жук Марина Юрьевна   ( 58 )\n",
      "№ 15 )   Пасихов Никита Денисович   ( 58 )\n",
      "№ 16 )   Распутина Софья Александровна   ( 56 )\n",
      "№ 17 )   Флегонтов Антон Алексеевич   ( 56 )\n",
      "№ 18 )   Швидко Мария Александровна   ( 56 )\n",
      "№ 19 )   Шишкина Анастасия Михайловна   ( 56 )\n",
      "№ 20 )   Багдасарова Мария Артёмовна   ( 56 )\n",
      "№ 21 )   Венгеров Кирилл Игоревич   ( 56 )\n",
      "№ 22 )   Ким Дмитрий Алексеевич   ( 56 )\n",
      "№ 23 )   Кучев Виктор Николаевич   ( 56 )\n",
      "№ 24 )   Удовица Артём Олегович   ( 55 )\n",
      "№ 25 )   Юрчук Мирослав Дмитриевич   ( 55 )\n",
      "№ 26 )   Андреев Дмитрий Валерьевич   ( 54 )\n",
      "№ 27 )   Борисов Валентин Денисович   ( 54 )\n",
      "№ 28 )   Панин Кирилл Артёмович   ( 54 )\n",
      "№ 29 )   Солнцев Кирилл Викторович   ( 54 )\n",
      "№ 30 )   Стукан Дмитрий Александрович   ( 53 )\n",
      "№ 31 )   Тишков Александр Александрович   ( 53 )\n",
      "№ 32 )   Азаренко Артём Александрович   ( 53 )\n",
      "№ 33 )   Кузнецов Аркадий Дмитриевич   ( 53 )\n",
      "№ 34 )   Сагиев Вадим Вадимович   ( 52 )\n",
      "№ 35 )   Стародубов Егор Алексеевич   ( 52 )\n",
      "№ 36 )   Агеева Елизавета Игоревна   ( 52 )\n",
      "№ 37 )   Кокина Алиса Александровна   ( 52 )\n",
      "№ 38 )   Кудрина Софья Александровна   ( 51 )\n",
      "№ 39 )   Лу Цзянь -   ( 51 )\n",
      "№ 40 )   Павлов Владимир -   ( 51 )\n",
      "№ 41 )   Завьялова Екатерина Алексеевна   ( 51 )\n",
      "№ 42 )   Поляков Александр Андреевич   ( 50 )\n",
      "№ 43 )   Шванова Инна Геннадьевна   ( 50 )\n",
      "№ 44 )   Булгакова Кристина Игоревна   ( 50 )\n",
      "№ 45 )   Власюк Дмитрий Святославович   ( 50 )\n",
      "№ 46 )   Сайфуллин Арсен Эдуардович   ( 49 )\n",
      "№ 47 )   Борисов Станислав Викторович   ( 49 )\n",
      "№ 48 )   Бутакова Ксения Михайловна   ( 49 )\n",
      "№ 49 )   Вахитова Алиса Радиковна   ( 49 )\n",
      "№ 50 )   Демьянов Александр Сергеевич   ( 48 )\n",
      "№ 51 )   Карпилович Игнат Юрьевич   ( 48 )\n",
      "№ 52 )   Синельник Софья Вадимовна   ( 48 )\n",
      "№ 53 )   Устименко Полина Антоновна   ( 48 )\n",
      "№ 54 )   Федорова Елизавета Александровна   ( 48 )\n",
      "№ 55 )   Богомазова Анна Сергеевна   ( 48 )\n",
      "№ 56 )   Волохова Екатерина Сергеевна   ( 47 )\n",
      "№ 57 )   Калиновский Алексей Александрович   ( 47 )\n",
      "№ 58 )   Черниговский Матвей Романович   ( 47 )\n",
      "№ 59 )   Шабанов Юрий Александрович   ( 46 )\n",
      "№ 60 )   Володченко Полина Витальевна   ( 46 )\n",
      "№ 61 )   Оганов Михаил Владимирович   ( 46 )\n",
      "№ 62 )   Рафаелян Георгий Робертович   ( 45 )\n",
      "№ 63 )   Шумилов Егор Дмитриевич   ( 45 )\n",
      "№ 64 )   Болдырев Никита Сергеевич   ( 45 )\n",
      "№ 65 )   Медведева Арина Евгеньевна   ( 45 )\n",
      "№ 66 )   Тарасов Кирилл Олегович   ( 44 )\n",
      "№ 67 )   Чинарихин Матвей Сергеевич   ( 44 )\n",
      "№ 68 )   Абрамов Илья Викторович   ( 44 )\n",
      "№ 69 )   Запрягаева Влада Юрьевна   ( 44 )\n",
      "№ 70 )   Комарова Юлия Денисовна   ( 44 )\n",
      "№ 71 )   Крапивной Виталий Александрович   ( 44 )\n",
      "№ 72 )   Репецкая Матрёна Сергеевна   ( 43 )\n",
      "№ 73 )   Рубан Иван Константинович   ( 43 )\n",
      "№ 74 )   Суханова Анастасия Игоревна   ( 43 )\n",
      "№ 75 )   Чеснакова Марина Алексеевна   ( 43 )\n",
      "№ 76 )   Даупбаева Айганым -   ( 43 )\n",
      "№ 77 )   Конькова Арина Александровна   ( 43 )\n",
      "№ 78 )   Кошелев Емельян Александрович   ( 42 )\n",
      "№ 79 )   Курбатов Игорь Владимирович   ( 42 )\n",
      "№ 80 )   Савиных Егор Сергеевич   ( 42 )\n",
      "№ 81 )   Хакимов Санжар Зафарович   ( 41 )\n",
      "№ 82 )   Гиниятуллин Эрнест Эдуардович   ( 41 )\n",
      "№ 83 )   Минаев Владислав Романович   ( 41 )\n",
      "№ 84 )   Мурзалина Жания -   ( 40 )\n",
      "№ 85 )   Штуца Елизавета Ильинична   ( 40 )\n",
      "№ 86 )   Экономова Мария Александровна   ( 40 )\n",
      "№ 87 )   Антипова Анна Михайловна   ( 40 )\n",
      "№ 88 )   Комарова Александра Денисовна   ( 40 )\n",
      "№ 89 )   Курмукова Дарья Илдаровна   ( 40 )\n",
      "№ 90 )   Любимов Даниил Александрович   ( 40 )\n",
      "№ 91 )   Перваков Владислав Вадимович   ( 39 )\n",
      "№ 92 )   Пятаков Илья Андреевич   ( 39 )\n",
      "№ 93 )   Саладущенкова Екатерина Евгеньевна   ( 39 )\n",
      "№ 94 )   Ван Цзинхуэй -   ( 39 )\n",
      "№ 95 )   Горовая Мария Андреевна   ( 39 )\n",
      "№ 96 )   Гуманова Мария Михайловна   ( 39 )\n",
      "№ 97 )   Динмухамед Даяна -   ( 39 )\n",
      "№ 98 )   Костенкова Дарья Алексеевна   ( 39 )\n",
      "№ 99 )   Кревсун Алина Константиновна   ( 39 )\n",
      "№ 100 )   Лиманский Лев Романович   ( 38 )\n",
      "№ 101 )   Малькова Софья Алексеевна   ( 38 )\n",
      "№ 102 )   Моисеева Ксения Игоревна   ( 38 )\n",
      "№ 103 )   Финютина Екатерина Вячеславовна   ( 38 )\n",
      "№ 104 )   Шишкин Дамир Евгеньевич   ( 38 )\n",
      "№ 105 )   Ахтариева Алёна Данировна   ( 38 )\n",
      "№ 106 )   Гайнутдинова Амина Ринатовна   ( 38 )\n",
      "№ 107 )   Головин Артём Андреевич   ( 38 )\n",
      "№ 108 )   Команова Алиса Викторовна   ( 38 )\n",
      "№ 109 )   Буднева Полина Михайловна   ( 37 )\n",
      "№ 110 )   Егорова Елизавета Борисовна   ( 37 )\n",
      "№ 111 )   Ескендир Ажар -   ( 36 )\n",
      "№ 112 )   Жижин Максим Андреевич   ( 36 )\n",
      "№ 113 )   Манчук Дмитрий Сергеевич   ( 36 )\n",
      "№ 114 )   Махмудова Анастасия Искандаровна   ( 36 )\n",
      "№ 115 )   Оржебовская Евгения Константиновна   ( 36 )\n",
      "№ 116 )   Павлоцкий Борис Ефимович   ( 36 )\n",
      "№ 117 )   Поляков Артемий Владимирович   ( 36 )\n",
      "№ 118 )   Чернышев Глеб Владимирович   ( 36 )\n",
      "№ 119 )   Багдасарова Ангелина Рафиковна   ( 36 )\n",
      "№ 120 )   Гвоздева Валерия Игоревна   ( 36 )\n",
      "№ 121 )   Грицевич Камилла Евгеньевна   ( 35 )\n",
      "№ 122 )   Дубровская Яна Олеговна   ( 35 )\n",
      "№ 123 )   Каланджан Глеб Андреевич   ( 35 )\n",
      "№ 124 )   Красавин Олег Игоревич   ( 35 )\n",
      "№ 125 )   Мартиросян Нарине Григорьевна   ( 35 )\n",
      "№ 126 )   Оглы Анастасия Александровна   ( 35 )\n",
      "№ 127 )   Сахно Евфросиния Дмитриевна   ( 35 )\n",
      "№ 128 )   Смирнов Георгий Александрович   ( 35 )\n",
      "№ 129 )   Стрельников Владимир Игоревич   ( 35 )\n",
      "№ 130 )   Тасминская Анастасия Михайловна   ( 35 )\n",
      "№ 131 )   Чан Конг Зуи Ан -   ( 35 )\n",
      "№ 132 )   Яцуненко Даниил Евгеньевич   ( 34 )\n",
      "№ 133 )   Ершова Мария Александровна   ( 34 )\n",
      "№ 134 )   Золотарева Злата Сергеевна   ( 34 )\n",
      "№ 135 )   Кондрашова Елизавета Вячеславовна   ( 34 )\n",
      "№ 136 )   Линь Данни -   ( 34 )\n",
      "№ 137 )   Мурылева Ксения Антоновна   ( 34 )\n",
      "№ 138 )   Потехина Вера Андреевна   ( 34 )\n",
      "№ 139 )   Роберт Алексей Эрикович   ( 33 )\n",
      "№ 140 )   Шамои Заил Рашидович   ( 33 )\n",
      "№ 141 )   Шерман Лея Александровна   ( 33 )\n",
      "№ 142 )   Баричева Полина Олеговна   ( 33 )\n",
      "№ 143 )   Болдова Мария Марковна   ( 33 )\n",
      "№ 144 )   Ворошилин Иван Игоревич   ( 33 )\n",
      "№ 145 )   Думнова Валерия Алексеевна   ( 33 )\n",
      "№ 146 )   Козелло Екатерина Игоревна   ( 33 )\n",
      "№ 147 )   Кононова Мария Алексеевна   ( 33 )\n",
      "№ 148 )   Кухлевская Анастасия Эдуардовна   ( 33 )\n",
      "№ 149 )   Максимов Дмитрий Александрович   ( 33 )\n",
      "№ 150 )   Матвиевский Максим Павлович   ( 33 )\n",
      "№ 151 )   Махалова Софья Александровна   ( 33 )\n",
      "№ 152 )   Мельничук Виолетта Владимировна   ( 32 )\n",
      "№ 153 )   Смирнов Павел Сергеевич   ( 32 )\n",
      "№ 154 )   Соболева Виктория -   ( 32 )\n",
      "№ 155 )   Тишкова Софья Сергеевна   ( 32 )\n",
      "№ 156 )   Явися Полина Андреевна   ( 32 )\n",
      "№ 157 )   Акопян Мариам Аперовна   ( 32 )\n",
      "№ 158 )   Борисова Ульяна Васильевна   ( 32 )\n",
      "№ 159 )   Видович Вера Янковна   ( 32 )\n",
      "№ 160 )   Долганова Софья Михайловна   ( 32 )\n",
      "№ 161 )   Колесников Максим Александрович   ( 32 )\n",
      "№ 162 )   Коробов Иван Дмитриевич   ( 32 )\n",
      "№ 163 )   Костюк Ярослав Русланович   ( 32 )\n",
      "№ 164 )   Макарова Александра Борисовна   ( 32 )\n",
      "№ 165 )   Мишуков Егор Дмитриевич   ( 31 )\n",
      "№ 166 )   Панин Максим Александрович   ( 31 )\n",
      "№ 167 )   Тангиев Идрис Ибрагимович   ( 31 )\n",
      "№ 168 )   Щекотова Анастасия Антоновна   ( 31 )\n",
      "№ 169 )   Алиев Арслан Магомедович   ( 31 )\n",
      "№ 170 )   Бабаева Дженнет Бяшимовна   ( 31 )\n",
      "№ 171 )   Вихарева Кристина Олеговна   ( 31 )\n",
      "№ 172 )   Дулин Борис Константинович   ( 31 )\n",
      "№ 173 )   Коломойцева Алина Леонидовна   ( 31 )\n",
      "№ 174 )   Колтун Александра Максимовна   ( 31 )\n",
      "№ 175 )   Кудряшова Анна Андреевна   ( 31 )\n",
      "№ 176 )   Лосаберидзе Полина Мамуковна   ( 30 )\n",
      "№ 177 )   Попельнюхова Екатерина Сергеевна   ( 30 )\n",
      "№ 178 )   Томилин Артём -   ( 30 )\n",
      "№ 179 )   Уланова Виктория Николаевна   ( 30 )\n",
      "№ 180 )   Хает Марк Игоревич   ( 30 )\n",
      "№ 181 )   Чуланова Полина Дмитриевна   ( 30 )\n",
      "№ 182 )   Голоднова Анастасия Вадимовна   ( 30 )\n",
      "№ 183 )   Гурбанов Осман Маисович   ( 30 )\n",
      "№ 184 )   Егоров Богдан Евгеньевич   ( 30 )\n",
      "№ 185 )   Ишутина Александра -   ( 30 )\n",
      "№ 186 )   Кривошеева Анна Сергеевна   ( 30 )\n",
      "№ 187 )   Стефанова Варвара Александровна   ( 29 )\n",
      "№ 188 )   Чан Ань Киет -   ( 29 )\n",
      "№ 189 )   Гришин Александр Сергеевич   ( 29 )\n",
      "№ 190 )   Кокорев Максим Александрович   ( 28 )\n",
      "№ 191 )   Мазурин Даниил Денисович   ( 28 )\n",
      "№ 192 )   Романова Александра Андреевна   ( 28 )\n",
      "№ 193 )   Сосорев Владимир Андреевич   ( 28 )\n",
      "№ 194 )   Феоктистов Николай Константинович   ( 28 )\n",
      "№ 195 )   Филимонова Екатерина Олеговна   ( 28 )\n",
      "№ 196 )   Чуйков Артём Игоревич   ( 28 )\n",
      "№ 197 )   Шарифов Эльмир Беглярович   ( 28 )\n",
      "№ 198 )   Бородин Андрей Викторович   ( 28 )\n",
      "№ 199 )   Исаева Алина Юрьевна   ( 27 )\n",
      "№ 200 )   Меркулова Виктория Анатольевна   ( 27 )\n",
      "№ 201 )   Насонов Руслан Денисович   ( 27 )\n",
      "№ 202 )   Сучков Артём Алексеевич   ( 27 )\n",
      "№ 203 )   Уланова Алина Николаевна   ( 27 )\n",
      "№ 204 )   Фролов Артём Дмитриевич   ( 27 )\n",
      "№ 205 )   Хажимурат Нурбек -   ( 27 )\n",
      "№ 206 )   Ханжин Марк Денисович   ( 27 )\n",
      "№ 207 )   Шаров Илья Андреевич   ( 27 )\n",
      "№ 208 )   Эдельбиев Абдул-Малик Абдул-Керимович   ( 26 )\n",
      "№ 209 )   Аванесов Артём Андреевич   ( 26 )\n",
      "№ 210 )   Дижур Елизавета Геннадьевна   ( 26 )\n",
      "№ 211 )   Караченцов Пётр Андреевич   ( 26 )\n",
      "№ 212 )   Нерсесян Аристарх Робертович   ( 26 )\n",
      "№ 213 )   Пинчук Екатерина Витальевна   ( 26 )\n",
      "№ 214 )   Ратушная Александра Романовна   ( 26 )\n",
      "№ 215 )   Трухан Никита Александрович   ( 25 )\n",
      "№ 216 )   Абдуганиев Бехзод Бахромжон угли   ( 25 )\n",
      "№ 217 )   Алехно Максим Игоревич   ( 25 )\n",
      "№ 218 )   Зольникова Августа Сергеевна   ( 25 )\n",
      "№ 219 )   Зыбин Фёдор Антонович   ( 25 )\n",
      "№ 220 )   Колчин Борис Олегович   ( 25 )\n",
      "№ 221 )   Маркарян Марк Жирайрович   ( 25 )\n",
      "№ 222 )   Монгуш Валерия Аясовна   ( 25 )\n",
      "№ 223 )   Одинцов Антон Викторович   ( 25 )\n",
      "№ 224 )   Прусаков Андрей Денисович   ( 25 )\n",
      "№ 225 )   Цаллагова Виолетта Дмитриевна   ( 24 )\n",
      "№ 226 )   Цзян Хаоюнь -   ( 24 )\n",
      "№ 227 )   Баходуров Руслан Мамурович   ( 24 )\n",
      "№ 228 )   Баян Айрана Аясовна   ( 24 )\n",
      "№ 229 )   Верба Владимир Максимович   ( 24 )\n",
      "№ 230 )   Дулгеру Алексей Артурович   ( 24 )\n",
      "№ 231 )   Марковская Анастасия Дмитриевна   ( 24 )\n",
      "№ 232 )   Мухин Константин Григорьевич   ( 23 )\n",
      "№ 233 )   Озолин Денис Александрович   ( 23 )\n",
      "№ 234 )   Уразбахтин Радмир Расихович   ( 23 )\n",
      "№ 235 )   Хашимов Жасур Фарходович   ( 23 )\n",
      "№ 236 )   Юминова Анна -   ( 23 )\n",
      "№ 237 )   Асадова Айгюн Джабировна   ( 23 )\n",
      "№ 238 )   Глебов Юрий Юрьевич   ( 23 )\n",
      "№ 239 )   Жиляева Елизавета -   ( 23 )\n",
      "№ 240 )   Козачук Александр Владимирович   ( 23 )\n",
      "№ 241 )   Лифар Михаил Андраникович   ( 23 )\n",
      "№ 242 )   Мечетина Ева Александровна   ( 22 )\n",
      "№ 243 )   Секрет Татьяна Андреевна   ( 22 )\n",
      "№ 244 )   Султонбеков Хусанбек Гофурбек угли   ( 22 )\n",
      "№ 245 )   Шерматова Тансулуу Насипбековна   ( 22 )\n",
      "№ 246 )   Жученко Алла Сергеевна   ( 22 )\n",
      "№ 247 )   Иванов Всеволод Никитич   ( 22 )\n",
      "№ 248 )   Коваленко Виктория Эдуардовна   ( 22 )\n",
      "№ 249 )   Крымов Владислав Константинович   ( 21 )\n",
      "№ 250 )   Лебедева Элина Эмильевна   ( 21 )\n",
      "№ 251 )   Одинцова Настасья Алексеевна   ( 21 )\n",
      "№ 252 )   Толеужан Адилет -   ( 21 )\n",
      "№ 253 )   Турнаев Александр -   ( 21 )\n",
      "№ 254 )   Ходырев Александр Евгеньевич   ( 21 )\n",
      "№ 255 )   Чернуха Алексей Алексеевич   ( 21 )\n",
      "№ 256 )   Авдалян Георгий Каренович   ( 21 )\n",
      "№ 257 )   Азимова Асаль Сухробовна   ( 21 )\n",
      "№ 258 )   Беляевский Иван Денисович   ( 21 )\n",
      "№ 259 )   Зезелёв Максим Андреевич   ( 21 )\n",
      "№ 260 )   Зимин Александр Ильич   ( 21 )\n",
      "№ 261 )   Лебедев Владислав Владимирович   ( 20 )\n",
      "№ 262 )   Самокишин Семен Алексеевич   ( 20 )\n",
      "№ 263 )   Шхимян Мадлена Константиновна   ( 20 )\n",
      "№ 264 )   Ядрищенский Александр Александрович   ( 20 )\n",
      "№ 265 )   Андрианов Андрей Сергеевич   ( 19 )\n",
      "№ 266 )   Арчибасова Алина Олеговна   ( 19 )\n",
      "№ 267 )   Бишир Младен -   ( 19 )\n",
      "№ 268 )   Гедгагов Султан Арсенович   ( 19 )\n",
      "№ 269 )   Гозгешев Эльдар Альбертович   ( 19 )\n",
      "№ 270 )   Джумаян Анна Арамовна   ( 19 )\n",
      "№ 271 )   Тесленко Пётр Олегович   ( 19 )\n",
      "№ 272 )   Мирзоева Айсел Фамиль кызы   ( 18 )\n",
      "№ 273 )   Орлова Варвара Максимовна   ( 18 )\n",
      "№ 274 )   Поспелова Полина Андреевна   ( 18 )\n",
      "№ 275 )   Снастина Софья Алексеевна   ( 18 )\n",
      "№ 276 )   Ушакова Дарья Андреевна   ( 17 )\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "№ 277 )   Манукян Александр Андраникович   ( 17 )\n",
      "№ 278 )   Насуханова Ясмина Шаамановна   ( 16 )\n",
      "№ 279 )   Туровская Мария Сергеевна   ( 16 )\n",
      "№ 280 )   Бабаян Кристина Сергеевна   ( 16 )\n",
      "№ 281 )   Магамедова Анна Сергеевна   ( 16 )\n",
      "№ 282 )   Точилкина Алёна Игоревна   ( 15 )\n",
      "№ 283 )   Галиченко Валентина Павловна   ( 15 )\n",
      "№ 284 )   Гольм Юлия Вадимовна   ( 15 )\n",
      "№ 285 )   Казыханов Ален -   ( 14 )\n",
      "№ 286 )   Тищенко Александр Сергеевич   ( 14 )\n",
      "№ 287 )   Ширшов Захар Владиславович   ( 14 )\n",
      "№ 288 )   Кабылбеков Алихан -   ( 13 )\n",
      "№ 289 )   Шаврова Виктория Алексеевна   ( 13 )\n",
      "№ 290 )   Алексеенко Полина Игоревна   ( 12 )\n",
      "№ 291 )   Антонян Роман Витальевич   ( 12 )\n",
      "№ 292 )   Мамедкеримов Руслан Тимурович   ( 12 )\n",
      "№ 293 )   Хань Хаочэнь -   ( 11 )\n",
      "№ 294 )   Асадов Иван Анастасович   ( 11 )\n",
      "№ 295 )   Виноградов Дмитрий Борисович   ( 11 )\n",
      "№ 296 )   Козлова Анна Сергеевна   ( 11 )\n",
      "№ 297 )   Атулян Анна Джаниковна   ( 10 )\n",
      "№ 298 )   Киселев Георгий -   ( 10 )\n",
      "№ 299 )   Новоженов Дмитрий Денисович   ( 9 )\n",
      "№ 300 )   Пирогов Дмитрий Леонидович   ( 8 )\n",
      "№ 301 )   Синявская Дарья Степановна   ( 8 )\n",
      "№ 302 )   Ван Юйцзе -   ( 8 )\n",
      "№ 303 )   Гаврюшин Иван Викторович   ( 7 )\n",
      "№ 304 )   Фунг Куок Туан -   ( 7 )\n",
      "№ 305 )   Абахов Александр Олегович   ( 7 )\n",
      "№ 306 )   Агакишиева Нигар Исмаиловна   ( 7 )\n",
      "№ 307 )   Бутко Софья Андреевна   ( 7 )\n",
      "№ 308 )   Горюнов Георгий Алексеевич   ( 6 )\n",
      "№ 309 )   Зайнобиддинов Хожиакбар Мухаммаджон угли   ( 6 )\n",
      "№ 310 )   Нордас Анастасия Максимовна   ( 5 )\n",
      "№ 311 )   Максимов Риад Юнус олгы   ( 3 )\n",
      "№ 312 )   Дубинина Ксения Михайловна   ( 2 )\n",
      "№ 313 )   Елтаев Икрамжон -   ( 0 )\n",
      "№ 314 )   Жирихин Павел Антонович   ( 0 )\n",
      "№ 315 )   Иванцова Екатерина Николаевна   ( 0 )\n",
      "№ 316 )   Козлов Максим Андреевич   ( 0 )\n",
      "№ 317 )   Ледяева Полина Сергеевна   ( 0 )\n",
      "№ 318 )   Молчанов Милан Вагифович   ( 0 )\n",
      "№ 319 )   Павленко Полина Олеговна   ( 0 )\n",
      "№ 320 )   Симикян Андраник Артурович   ( 0 )\n",
      "№ 321 )   Чжао Хэннань -   ( 0 )\n",
      "№ 322 )    ( 0 )\n",
      "№ 323 )   Аббасов Байрам Рахман оглы   ( 0 )\n",
      "№ 324 )   Аслонов Жавохир Уктамжонович   ( 0 )\n",
      "№ 325 )   Бовдурец Сергей Сергеевич   ( 0 )\n",
      "№ 326 )   Богомолова Дарья Евгеньевна   ( 0 )\n",
      "№ 327 )   Гордеева Наталия Михайловна   ( 0 )\n"
     ]
    }
   ],
   "source": [
    "sorting(mar, 'Nakop', 'True', nakop)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "metadata": {},
   "outputs": [],
   "source": [
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "data = pd.DataFrame(data_to_sort)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "metadata": {},
   "outputs": [],
   "source": [
    "marks = []\n",
    "for name in data:\n",
    "    try:\n",
    "        marks.append(float(data[name][subject]))\n",
    "    except:\n",
    "        pass"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Далее вы можете получить гистограмму распределения оценок по выбранному предмету и периоду"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 157,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Distribution of marks for Macroeconomics')"
      ]
     },
     "execution_count": 157,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.set_style('whitegrid')\n",
    "sns.distplot(marks, kde = False, bins = 10, \n",
    "            color = \"aquamarine\",\n",
    "            hist_kws = {'alpha' : 0.9, 'edgecolor' : 'k'})\n",
    "plt.xlabel(f\"Mark for {subject}\")\n",
    "plt.ylabel(\"Number of students\")\n",
    "plt.title(f\"Distribution of marks for {subject}\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
